;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Locator Template for US Hyphenated Ranges with Zone (with alternate names)
; 
; Based on Geodatabase Feature Class (MS Access, ArcSDE, FileGDB)
; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Locator Category
;
; Notes:
;  Name property value must not be longer than 31 characters including spaces
;  Description property value must not be longer than 63 characters including spaces
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Category = Address
Name        = "NYC Hyphenated Ranges Zone(A)"
Description = "NYC Hyphenated Ranges with Zone and Alternate Names (GDB)"
Type        = SE_LOCATOR_TEMPLATE

Version = 9.2
BuildVersion = $Revision: 1$
BuildVersionDate = $Date: 10/1/2007 11:40:51 PM$

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Properties Required by ArcGIS Client User Interface
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

ArcGIS::CLSID      = {B5D3AB87-EED1-11D3-9F76-00C04F8ED1C4}
SDE::CLSID         = {04FCADCF-ED3B-11D2-9F48-00C04F8ED1C4} 

UICLSID            = {AE5A3A0E-F756-11D2-9F4F-00C04F8ED1C4}

Fields             = Street
Fields             = Zone

FieldAliases       = "Street or Intersection"
FieldAliases       = "Zone"

FieldNames.0       = Address
FieldNames.0       = Addr
FieldNames.0       = Street
FieldNames.1       = BoroCode
FieldNames.1       = Boro
FieldNames.1       = Borough
FieldNames.1       = Zip
FieldNames.1       = Zipcode
FieldNames.1       = City
FieldNames.1       = Zone

FieldsRequired     = TRUE
FieldsRequired     = FALSE

FieldSizes         = 60
FieldSizes         = 40

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Fundamental Locator Properties
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Locator.Library        = mtchloc
Locator.CLSID          = {D9052385-AB46-11d2-AADA-00C04FA379E3}
Locator.FactoryLibrary = mtchloc
Locator.FactoryCLSID   = {68F5E953-06FF-11d3-AAFD-00C04FA379E3}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; ESRI Geocoder Fundamental Properties
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Query.Library        = mtchloc
Query.CLSID          = {1845B140-FC3B-11d2-AAFA-00C04FA379E3}

ArcGIS::DBEnv.Library = LocationQueryEngine
SDE::DBEnv.Library    = mtchloc 
ArcGIS::DBEnv.CLSID   = {43BA3ECC-0120-11d4-AB58-00C04FA379E3}
SDE::DBEnv.CLSID      = {78E9FDDC-001A-11d4-AB58-00C04FA379E3} 

MKeyField            = XX
MKeyField            = ZN

SupportIntersections   = TRUE
Interpolate            = TRUE

UseRelativePaths       = FALSE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; ESRI Geocoder Optional Properties
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FileMAT                = lion1.mat
FileSTN                = ny_addr.stn
IntFileMAT             = us_intsc1.mat
IntFileSTN             = us_intsc.stn

StanRefDataExcludeField = CS

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; ESRI Geocoder Misc Optional Properties
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

IntersectionConnectors = & | @
MinimumMatchScore      = 100
MinimumCandidateScore  = 10
EndOffset              = 3
SideOffset             = 25
SideOffsetUnits        = Feet
SpellingSensitivity    = 100

MatchIfScoresTie              = TRUE

WriteXYCoordFields            = FALSE
WriteStandardizedAddressField = FALSE
WriteReferenceIDField         = FALSE
WritePercentAlongField        = FALSE

StoreStandardizedRefData      = TRUE
EmbedGeocodingRules           = TRUE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; ESRI Geocoder Specific - aliases for standardization fields 
; (Names shown on the Geocoding Interactive Review Dialog)
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MKeyAlias.CS         = CrossStreet
MKeyAlias.HN         = HouseNum
MKeyAlias.PD         = PreDir
MKeyAlias.PT         = PreType
MKeyAlias.SN         = StreetName
MKeyAlias.ST         = SufType
MKeyAlias.SD         = SufDir
MKeyAlias.ZN         = Zone

MKeyAlias.P1         = PreDir1
MKeyAlias.E1         = PreType1
MKeyAlias.S1         = StreetName1
MKeyAlias.T1         = SufType1
MKeyAlias.D1         = SufDir1
MKeyAlias.P2         = PreDir2
MKeyAlias.E2         = PreType2
MKeyAlias.S2         = StreetName2
MKeyAlias.T2         = SufType2
MKeyAlias.D2         = SufDir2

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Preferred Field Names For Matchable Fields In Reference Feature Class
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.Val.Table1.LeftFrom         = LLO_HYPHEN
RD.Val.Table1.LeftFrom         = FROMLEFT
RD.Val.Table1.LeftFrom         = L-F-ADD
RD.Val.Table1.LeftFrom         = L_F_ADD
RD.Val.Table1.LeftFrom         = L_F_ADD_INT
RD.Val.Table1.LeftFrom         = LEFTADD1
RD.Val.Table1.LeftFrom         = L-ADD_FROM
RD.Val.Table1.LeftFrom         = L_ADD_FROM
RD.Val.Table1.LeftFrom         = L-ADD-FROM
RD.Val.Table1.LeftFrom         = L_ADD-FROM
RD.Val.Table1.LeftFrom         = LADD_FR
RD.Val.Table1.LeftFrom         = LADD-FR
RD.Val.Table1.LeftFrom         = LFROM
RD.Val.Table1.LeftFrom         = FRADDL
RD.Val.Table1.LeftFrom         = ADLF
RD.Val.Table1.LeftFrom         = L_REFADDR
RD.Val.Table1.LeftFrom         = LLOWHOUSEN

RD.Val.Table1.LeftTo           = LHI_HYPHEN
RD.Val.Table1.LeftTo           = TOLEFT
RD.Val.Table1.LeftTo           = L-T-ADD
RD.Val.Table1.LeftTo           = L_T_ADD
RD.Val.Table1.LeftTo           = L_T_ADD_INT
RD.Val.Table1.LeftTo           = LEFTADD2
RD.Val.Table1.LeftTo           = L-ADD_TO
RD.Val.Table1.LeftTo           = L_ADD_TO
RD.Val.Table1.LeftTo           = L-ADD-TO
RD.Val.Table1.LeftTo           = L_ADD-TO
RD.Val.Table1.LeftTo           = LADD_TO
RD.Val.Table1.LeftTo           = LADD-TO
RD.Val.Table1.LeftTo           = LTO
RD.Val.Table1.LeftTo           = TOADDL
RD.Val.Table1.LeftTo           = ADLT
RD.Val.Table1.LeftTo           = L_NREFADDR
RD.Val.Table1.LeftTo           = LHIGHHOUSE

RD.Val.Table1.RightFrom        = RLO_HYPHEN
RD.Val.Table1.RightFrom        = FROMRIGHT
RD.Val.Table1.RightFrom        = R-F-ADD
RD.Val.Table1.RightFrom        = R_F_ADD
RD.Val.Table1.RightFrom        = R_F_ADD_INT
RD.Val.Table1.RightFrom        = RGTADD1
RD.Val.Table1.RightFrom        = R-ADD_FROM
RD.Val.Table1.RightFrom        = R_ADD_FROM
RD.Val.Table1.RightFrom        = R-ADD-FROM
RD.Val.Table1.RightFrom        = R_ADD-FROM
RD.Val.Table1.RightFrom        = RADD_FROM
RD.Val.Table1.RightFrom        = RADD-FROM
RD.Val.Table1.RightFrom        = RFROM
RD.Val.Table1.RightFrom        = FRADDR
RD.Val.Table1.RightFrom        = ADRF
RD.Val.Table1.RightFrom        = R_REFADDR
RD.Val.Table1.RightFrom        = RLOWHOUSEN

RD.Val.Table1.RightTo          = RHI_HYPHEN
RD.Val.Table1.RightTo          = TORIGHT
RD.Val.Table1.RightTo          = R-T-ADD
RD.Val.Table1.RightTo          = R_T_ADD
RD.Val.Table1.RightTo          = R_T_ADD_INT
RD.Val.Table1.RightTo          = RGTADD2
RD.Val.Table1.RightTo          = R-ADD_TO
RD.Val.Table1.RightTo          = R_ADD_TO
RD.Val.Table1.RightTo          = R-ADD-TO
RD.Val.Table1.RightTo          = R_ADD-TO
RD.Val.Table1.RightTo          = RADD_TO
RD.Val.Table1.RightTo          = RADD-TO
RD.Val.Table1.RightTo          = RTO
RD.Val.Table1.RightTo          = TOADDR
RD.Val.Table1.RightTo          = ADRT
RD.Val.Table1.RightTo          = R_NREFADDR
RD.Val.Table1.RightTo          = RHIGHHOUSE

RD.Val.Table1.LeftZone         = LBoro
RD.Val.Table1.LeftZone         = BOROLEFT
RD.Val.Table1.LeftZone         = iLBoro
RD.Val.Table1.LeftZone         = ZipLeft
RD.Val.Table1.LeftZone         = LZIP
RD.Val.Table1.LeftZone         = ZIPL
RD.Val.Table1.LeftZone         = ZIP_L
RD.Val.Table1.LeftZone         = POSTAL_L
RD.Val.Table1.LeftZone         = LCITY
RD.Val.Table1.LeftZone         = CITYL
RD.Val.Table1.LeftZone         = CITY_L
RD.Val.Table1.LeftZone         = ZIP_LEFT
RD.Val.Table1.LeftZone         = ZIP-LEFT
RD.Val.Table1.LeftZone         = ZIPLEFT
RD.Val.Table1.LeftZone         = LEFT_ZIP
RD.Val.Table1.LeftZone         = LEFT-ZIP
RD.Val.Table1.LeftZone         = LEFTZIP
RD.Val.Table1.LeftZone         = L_ZIP
RD.Val.Table1.LeftZone         = L-ZIP
RD.Val.Table1.LeftZone         = L_PC
RD.Val.Table1.LeftZone         = L_POSTCODE
RD.Val.Table1.LeftZone         = ZIPCOLEF
RD.Val.Table1.LeftZone         = LEFT_CITY
RD.Val.Table1.LeftZone         = LEFT-CITY
RD.Val.Table1.LeftZone         = LEFTCITY
RD.Val.Table1.LeftZone         = L_CITY
RD.Val.Table1.LeftZone         = L-CITY
RD.Val.Table1.LeftZone         = PLACEL
RD.Val.Table1.LeftZone         = GEONAME_L
RD.Val.Table1.LeftZone         = PLACENAME_L
RD.Val.Table1.LeftZone         = LEFT_ZONE
RD.Val.Table1.LeftZone         = LEFT-ZONE
RD.Val.Table1.LeftZone         = LEFTZONE
RD.Val.Table1.LeftZone         = L_ZONE
RD.Val.Table1.LeftZone         = L-ZONE
RD.Val.Table1.LeftZone         = ZONEL
RD.Val.Table1.LeftZone         = ZONE
RD.Val.Table1.LeftZone         = ZIP
RD.Val.Table1.LeftZone         = CITY

RD.Val.Table1.RightZone        = RBoro
RD.Val.Table1.RightZone        = BORORIGHT
RD.Val.Table1.RightZone        = iRBoro
RD.Val.Table1.RightZone        = ZipRight
RD.Val.Table1.RightZone        = RZIP
RD.Val.Table1.RightZone        = ZIPR
RD.Val.Table1.RightZone        = ZIP_R
RD.Val.Table1.RightZone        = POSTAL_R
RD.Val.Table1.RightZone        = RCITY
RD.Val.Table1.RightZone        = CITYR
RD.Val.Table1.RightZone        = CITY_R
RD.Val.Table1.RightZone        = ZIP_RIGHT
RD.Val.Table1.RightZone        = ZIP-RIGHT
RD.Val.Table1.RightZone        = ZIPRIGHT
RD.Val.Table1.RightZone        = RIGHT_ZIP
RD.Val.Table1.RightZone        = RIGHT-ZIP
RD.Val.Table1.RightZone        = RIGHTZIP
RD.Val.Table1.RightZone        = R_ZIP
RD.Val.Table1.RightZone        = R-ZIP
RD.Val.Table1.RightZone        = R_PC
RD.Val.Table1.RightZone        = R_POSTCODE
RD.Val.Table1.RightZone        = ZIPCORGT
RD.Val.Table1.RightZone        = RCITY
RD.Val.Table1.RightZone        = CITYR
RD.Val.Table1.RightZone        = CITY_R
RD.Val.Table1.RightZone        = RIGHT_CITY
RD.Val.Table1.RightZone        = RIGHT-CITY
RD.Val.Table1.RightZone        = RIGHTCITY
RD.Val.Table1.RightZone        = R_CITY
RD.Val.Table1.RightZone        = R-CITY
RD.Val.Table1.RightZone        = PLACER
RD.Val.Table1.RightZone        = GEONAME_R
RD.Val.Table1.RightZone        = PLACENAME_R
RD.Val.Table1.RightZone        = RIGHT_ZONE
RD.Val.Table1.RightZone        = RIGHT-ZONE
RD.Val.Table1.RightZone        = RIGHTZONE
RD.Val.Table1.RightZone        = R_ZONE
RD.Val.Table1.RightZone        = R-ZONE
RD.Val.Table1.RightZone        = ZONER
RD.Val.Table1.RightZone        = ZONE
RD.Val.Table1.RightZone        = ZIP
RD.Val.Table1.RightZone        = CITY

RD.Val.Table1.JOINID           = JOIN_ID
RD.Val.Table1.JOINID           = JOINID
RD.Val.Table1.JOINID           = JOINITEM
RD.Val.Table1.JOINID           = TLID
RD.Val.Table1.JOINID           = LINK_ID
RD.Val.Table1.JOINID           = DYNAMAP_ID
RD.Val.Table1.JOINID           = CHAIN_ID
RD.Val.Table1.JOINID           = IB5DSC

RD.Val.Table1.ID               = FID
RD.Val.Table1.Shape            = Shape

; Preferred Field Names for Alternate Name Table

RD.Val.Table2.JOINID           = JOIN_ID
RD.Val.Table2.JOINID           = JOINID
RD.Val.Table2.JOINID           = ALTJOIN
RD.Val.Table2.JOINID           = JOINITEM
RD.Val.Table2.JOINID           = TLID
RD.Val.Table2.JOINID           = LINK_ID
RD.Val.Table2.JOINID           = DYNAMAP_ID
RD.Val.Table2.JOINID           = CHAIN_ID
RD.Val.Table2.JOINID           = STREETCODE
RD.Val.Table2.JOINID           = B5DSC
RD.Val.Table2.JOINID           = IB5DSC

RD.Val.Table2.PreDir           = ADDR_PD
RD.Val.Table2.PreDir           = PDIR
RD.Val.Table2.PreDir           = PREFIX
RD.Val.Table2.PreDir           = FDPRE
RD.Val.Table2.PreDir           = FEDIRP
RD.Val.Table2.PreDir           = PREDIR
RD.Val.Table2.PreDir           = PRE_DIR
RD.Val.Table2.PreDir           = DIR
RD.Val.Table2.PreDir           = DIRPABV_AL
RD.Val.Table2.PreDir           = DIRPABV-AL
RD.Val.Table2.PreDir           = ST_NM_PREF
RD.Val.Table2.PreDir           = FDPRE
RD.Val.Table2.PreDir           = FEDIRP

RD.Val.Table2.PreType          = ADDR_PT
RD.Val.Table2.PreType          = PTYPE
RD.Val.Table2.PreType          = PRE_TYPE
RD.Val.Table2.PreType          = PRETYPE
RD.Val.Table2.PreType          = ST_TYP_BEF
RD.Val.Table2.PreType          = PREFIX_TYPE
RD.Val.Table2.PreType          = PREFIX_TYP
RD.Val.Table2.PreType          = PREFIXTYPE
RD.Val.Table2.PreType          = PREF_ALF
RD.Val.Table2.PreType          = PREF-ALF

RD.Val.Table2.StreetName       = ADDR_SN
RD.Val.Table2.StreetName       = SNAME
RD.Val.Table2.StreetName       = FNAME
RD.Val.Table2.StreetName       = FENAME
RD.Val.Table2.StreetName       = ST_NM_BASE
RD.Val.Table2.StreetName       = STREET-NAME
RD.Val.Table2.StreetName       = STREET_NAME
RD.Val.Table2.StreetName       = STREET_NAM
RD.Val.Table2.StreetName       = STREETNAME
RD.Val.Table2.StreetName       = ST_NAME
RD.Val.Table2.StreetName       = ST-NAME
RD.Val.Table2.StreetName       = STR_NAME
RD.Val.Table2.StreetName       = STR-NAME
RD.Val.Table2.StreetName       = ST_NM_BASE
RD.Val.Table2.StreetName       = NAME
RD.Val.Table2.StreetName       = FNAME
RD.Val.Table2.StreetName       = FENAME

RD.Val.Table2.StreetType       = ADDR_ST
RD.Val.Table2.StreetType       = STYPE
RD.Val.Table2.StreetType       = FTYPE
RD.Val.Table2.StreetType       = FETYPE
RD.Val.Table2.StreetType       = SUFTYPE
RD.Val.Table2.StreetType       = ST_TYP_AFT
RD.Val.Table2.StreetType       = STREET_TYPE
RD.Val.Table2.StreetType       = STREET_TYP
RD.Val.Table2.StreetType       = STREET-TYPE
RD.Val.Table2.StreetType       = STREETTYPE
RD.Val.Table2.StreetType       = ST_TYPE
RD.Val.Table2.StreetType       = ST-TYPE
RD.Val.Table2.StreetType       = STR_TYPE
RD.Val.Table2.StreetType       = STR-TYPE
RD.Val.Table2.StreetType       = ST_NM_TYPE
RD.Val.Table2.StreetType       = TYPE_
RD.Val.Table2.StreetType       = TYPE
RD.Val.Table2.StreetType       = SUF_TYPE
RD.Val.Table2.StreetType       = SUF-TYPE
RD.Val.Table2.StreetType       = FTYPE
RD.Val.Table2.StreetType       = FETYPE

RD.Val.Table2.SufDir           = ADDR_SD
RD.Val.Table2.SufDir           = SDIR
RD.Val.Table2.SufDir           = STREETDIR
RD.Val.Table2.SufDir           = FDSUF
RD.Val.Table2.SufDir           = FEDIRS
RD.Val.Table2.SufDir           = SUFFIXDIR
RD.Val.Table2.SufDir           = SUFDIR
RD.Val.Table2.SufDir           = SUF_DIR
RD.Val.Table2.SufDir           = SUF-DIR
RD.Val.Table2.SufDir           = SUFFIX_DIR
RD.Val.Table2.SufDir           = SUFFIX-DIR
RD.Val.Table2.SufDir           = DIRSABV_AL
RD.Val.Table2.SufDir           = DIRSABV-AL
RD.Val.Table2.SufDir           = STREET_DIR
RD.Val.Table2.SufDir           = STREET-DIR
RD.Val.Table2.SufDir           = ST_NM_SUFF
RD.Val.Table2.SufDir           = SUFFIX

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Functions
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.Func          = SDEX,mtchloc,SX,""
RD.Func          = ZNSX,mtchloc,ZoneSX,""
RD.Func          = SpellSens,mtchloc,SpellSens,""
RD.Func          = NYRange,mtchloc,NYRange,""

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Tables - Reference Data
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.Table         = Table1,"Primary table"
RD.Table         = Table2,"Alternate Name table"
RD.Table1.Filter = esriCatalog.GxFilterPGDBFeatureClasses
RD.Table1.Filter = esriCatalog.GxFilterSDEFeatureClasses
RD.Table2.Filter = esriCatalog.GxFilterPGDBTables
RD.Table2.Filter = esriCatalog.GxFilterSDETables

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Primary Table
;
; Index parameters
; N - No index, or Y - Index (by default ascending and not unique)
; U - Unique
; D - Descending
; This only applies to GDB tables as setting index on fields that 
; are used for queries can speed up the performance. Always use N for 
; shapefiles or ArcInfo coverages.
;
; Set required fields
;  TRUE = required field, FALSE = non-required field, if not set, always TRUE
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.Table1.Column = LeftFrom,"House From Left",N,TRUE
RD.Table1.Column = LeftTo,"House To Left",N,TRUE
RD.Table1.Column = RightFrom,"House From Right",N,TRUE
RD.Table1.Column = RightTo,"House To Right",N,TRUE
;RD.Table1.Column = PreDir,"Prefix Direction",N,FALSE
;RD.Table1.Column = PreType,"Prefix Type",N,FALSE
;RD.Table1.Column = StreetName,"Street Name",N,TRUE
;RD.Table1.Column = StreetType,"Street Type",N,FALSE
;RD.Table1.Column = SufDir,"Suffix Direction",N,FALSE
RD.Table1.Column = LeftZone,"Left Zone",N,TRUE
RD.Table1.Column = RightZone,"Right Zone",N,TRUE
RD.Table1.Column = JOINID,"Join ID",Y,TRUE
RD.Table1.Column = ID,"Record ID for the Primary table",N,TRUE
RD.Table1.Column = Shape,"Shape column",N,TRUE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Alternate Name Table
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.Table2.Column = PreDir,"Prefix Direction",N,FALSE
RD.Table2.Column = PreType,"Prefix Type",N,FALSE
RD.Table2.Column = StreetName,"Alternate Street Name",N,TRUE
RD.Table2.Column = StreetType,"Street Type",N,FALSE
RD.Table2.Column = SufDir,"Suffix Direction",N,FALSE
RD.Table2.Column = ID,"Record ID for the Alternate Name table",N,TRUE
RD.Table2.Column = JOINID,"Join ID",Y,TRUE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Index Tables
;
; If IdxTable1.Prefix is not specified, the default index table name
; prefix is "GEOCODING_INDEX_" and followed by the table unique object
; class ID. The maximum length of the prefix is 20 characters. Due to
; some platform compatibility reasons, the length of the prefix is 
; recommended to be 7 or fewer characters.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.IdxTable            = IdxTable1,"IndexTable for Primary table"
RD.IdxTable            = IdxTable2,"IndexTable for Alternate Name table"

RD.IdxTable1.Prefix    = GC_HYZ
RD.IdxTable1.IdxColumn = XID,"Soundex foreign key column",Y,$Table1.ID
RD.IdxTable1.IdxColumn = Sx,"Soundex code column",Y,@SDEX($Table1.StreetName)
RD.IdxTable1.IdxColumn = ZoneL,"Left zone column",Y,@ZNSX($Table1.LeftZone)
RD.IdxTable1.IdxColumn = ZoneR,"Right zone column",Y,@ZNSX($Table1.RightZone)

RD.IdxTable1.IdxColumn = LeftXStreet,"",Y,@NYRange($Table1.LeftFrom, $Table1.LeftTo, 0)
;RD.IdxTable1.IdxColumn = LeftXStreet,"",Y,@NYRange($Table1.LeftFrom, $Table1.LeftTo, 1)
RD.IdxTable1.IdxColumn = LeftFrom,"",Y,@NYRange($Table1.LeftFrom, $Table1.LeftTo, 2)
RD.IdxTable1.IdxColumn = LeftTo,"",Y,@NYRange($Table1.LeftFrom, $Table1.LeftTo, 3)

RD.IdxTable1.IdxColumn = RightXStreet,"",Y,@NYRange($Table1.RightFrom, $Table1.RightTo, 1)
RD.IdxTable1.IdxColumn = RightFrom,"",Y,@NYRange($Table1.RightFrom, $Table1.RightTo, 2)
RD.IdxTable1.IdxColumn = RightTo,"",Y,@NYRange($Table1.RightFrom, $Table1.RightTo, 3)

RD.Val.IdxTable1.LeftXStreet  = LCS
RD.Val.IdxTable1.LeftFrom     = LF
RD.Val.IdxTable1.LeftTo       = LT
RD.Val.IdxTable1.RightXStreet = RCS
RD.Val.IdxTable1.RightFrom    = RF
RD.Val.IdxTable1.RightTo      = RT
RD.Val.IdxTable1.ZoneL        = LZONE
RD.Val.IdxTable1.ZoneR        = RZONE

RD.Val.IdxTable1.XID   = XID
RD.Val.IdxTable1.Sx    = SX

RD.IdxTable2.Prefix    = GC_ALHY
RD.IdxTable2.IdxColumn = XID,"Soundex foreign key column for the Alternate Name table",Y,$Table2.ID
RD.IdxTable2.IdxColumn = Sx,"Soundex code column",Y,@SDEX($Table2.StreetName)
RD.Val.IdxTable2.XID   = XID
RD.Val.IdxTable2.Sx    = SX

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Queries
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RD.Query               = Query1,"Main query"
RD.Query               = Query2,"Alternate Address query"

Fallback = FALSE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Primary Address Query
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RD.Query1.MF           = XStreetL,IdxTable1.LeftXStreet
;RD.Query1.MF           = LeftFrom,IdxTable1.LeftFrom
;RD.Query1.MF           = LeftTo,IdxTable1.LeftTo
;RD.Query1.MF           = XStreetR,IdxTable1.RightXStreet
;RD.Query1.MF           = RightFrom,IdxTable1.RightFrom
;RD.Query1.MF           = RightTo,IdxTable1.RightTo
;RD.Query1.MF           = PreDir,Table1.PreDir
;RD.Query1.MF           = PreType,Table1.PreType
;RD.Query1.MF           = StreetName,Table1.StreetName
;RD.Query1.MF           = StreetType,Table1.StreetType
;RD.Query1.MF           = SufDir,Table1.SufDir
;RD.Query1.MF           = LeftZone,Table1.LeftZone
;RD.Query1.MF           = RightZone,Table1.RightZone
;RD.Query1.MF           = Shape,Table1.Shape
;RD.Query1.MF           = ID,Table1.ID

;RD.Query1.Where             = $IdxTable1.Sx = '@SDEX(%SN%)'
;RD.Query1.InvariantWhere    = " AND $Table1.ID = $IdxTable1.XID"
;RD.Query1.ConditionalWhere  = ZN, " AND ($IdxTable1.ZoneL = '@ZNSX(%ZN%)' OR $IdxTable1.ZoneR = '@ZNSX(%ZN%)')"
;RD.Query1.FallbackWhere     = SN, $IdxTable1.Sx = '@SDEX(%SN%)'

;RD.Query1.Filter       = @SpellSens(%SN%, $Table1.StreetName)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Alternate Name Address Query 
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.Query2.MF           = XStreetL,IdxTable1.LeftXStreet
RD.Query2.MF           = LeftFrom,IdxTable1.LeftFrom
RD.Query2.MF           = LeftTo,IdxTable1.LeftTo
RD.Query2.MF           = XStreetR,IdxTable1.RightXStreet
RD.Query2.MF           = RightFrom,IdxTable1.RightFrom
RD.Query2.MF           = RightTo,IdxTable1.RightTo
RD.Query2.MF           = PreDir,Table2.PreDir
RD.Query2.MF           = PreType,Table2.PreType
RD.Query2.MF           = StreetName,Table2.StreetName
RD.Query2.MF           = StreetType,Table2.StreetType
RD.Query2.MF           = SufDir,Table2.SufDir
RD.Query2.MF           = LeftZone,Table1.LeftZone
RD.Query2.MF           = RightZone,Table1.RightZone
RD.Query2.MF           = Shape,Table1.Shape
RD.Query2.MF           = ID,Table1.ID

RD.Query2.Where             = $IdxTable2.Sx = '@SDEX(%SN%)'
RD.Query2.InvariantWhere    = " AND $Table2.ID = $IdxTable2.XID AND $Table1.JOINID = $Table2.JOINID"
RD.Query2.ConditionalWhere  = ZN, " AND ($IdxTable1.ZoneL = '@ZNSX(%ZN%)' OR $IdxTable1.ZoneR = '@ZNSX(%ZN%)')"
RD.Query2.FallbackWhere     = SN, $IdxTable2.Sx = '@SDEX(%SN%)'

RD.Query2.Filter = @SpellSens(%SN%, $Table2.StreetName)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Left Intersection Queries
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RD.LeftIntsecQuery     = ILQuery,"Left Intersection Query"
RD.LeftIntsecQuery     = ILAltQuery,"Left Intersection Query (Alternate Name)"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Left Primary Intersection Query
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RD.ILQuery.MF          = PreDir1,Table1.PreDir
;RD.ILQuery.MF          = PreType1,Table1.PreType
;RD.ILQuery.MF          = StreetName1,Table1.StreetName
;RD.ILQuery.MF          = Type1,Table1.StreetType
;RD.ILQuery.MF          = SufDir1,Table1.SufDir
;RD.ILQuery.MF          = LeftZone1,Table1.LeftZone
;RD.ILQuery.MF          = RightZone1,Table1.RightZone
;RD.ILQuery.MF          = Shape,Table1.Shape
;RD.ILQuery.MF          = ID,Table1.ID

;RD.ILQuery.Where             = $IdxTable1.Sx = '@SDEX(%S1%)'
;RD.ILQuery.InvariantWhere    = " AND $Table1.ID = $IdxTable1.XID"
;RD.ILQuery.ConditionalWhere  = ZN, " AND ($IdxTable1.ZoneL = '@ZNSX(%ZN%)' OR $IdxTable1.ZoneR = '@ZNSX(%ZN%)')"

;RD.ILQuery.Filter      = @SpellSens(%S1%, $Table1.StreetName)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Left Alternate Name Intersection Query
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.ILAltQuery.MF       = PreDir1,Table2.PreDir
RD.ILAltQuery.MF       = PreType1,Table2.PreType
RD.ILAltQuery.MF       = StreetName1,Table2.StreetName
RD.ILAltQuery.MF       = Type1,Table2.StreetType
RD.ILAltQuery.MF       = SufDir1,Table2.SufDir
RD.ILAltQuery.MF       = LeftZone1,Table1.LeftZone
RD.ILAltQuery.MF       = RightZone1,Table1.RightZone
RD.ILAltQuery.MF       = Shape,Table1.Shape
RD.ILAltQuery.MF       = ID,Table1.ID

RD.ILAltQuery.Where             = $IdxTable2.Sx = '@SDEX(%S1%)'
RD.ILAltQuery.InvariantWhere    = " AND $Table2.ID = $IdxTable2.XID AND $Table1.JOINID = $Table2.JOINID"
RD.ILAltQuery.ConditionalWhere  = ZN, " AND ($IdxTable1.ZoneL = '@ZNSX(%ZN%)' OR $IdxTable1.ZoneR = '@ZNSX(%ZN%)')"

RD.ILAltQuery.Filter = @SpellSens(%S1%, $Table2.StreetName)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Right Intersection Queries
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RD.RightIntsecQuery    = IRQuery,"Right Intersection Query"
RD.RightIntsecQuery    = IRAltQuery,"Right Intersection Query (Alternate Name)"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Right Primary Intersection Query
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RD.IRQuery.MF          = PreDir2,Table1.PreDir
;RD.IRQuery.MF          = PreType2,Table1.PreType
;RD.IRQuery.MF          = StreetName2,Table1.StreetName
;RD.IRQuery.MF          = Type2,Table1.StreetType
;RD.IRQuery.MF          = SufDir2,Table1.SufDir
;RD.IRQuery.MF          = LeftZone2,Table1.LeftZone
;RD.IRQuery.MF          = RightZone2,Table1.RightZone
;RD.IRQuery.MF          = Shape,Table1.Shape
;RD.IRQuery.MF          = ID,Table1.ID

;RD.IRQuery.Where             = $IdxTable1.Sx = '@SDEX(%S2%)'
;RD.IRQuery.InvariantWhere    = " AND $Table1.ID = $IdxTable1.XID"
;RD.IRQuery.ConditionalWhere  = ZN, " AND ($IdxTable1.ZoneL = '@ZNSX(%ZN%)' OR $IdxTable1.ZoneR = '@ZNSX(%ZN%)')"

;RD.IRQuery.Filter      = @SpellSens(%S2%, $Table1.StreetName)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Right Alternate Name Intersection Query
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RD.IRAltQuery.MF       = PreDir2,Table2.PreDir
RD.IRAltQuery.MF       = PreType2,Table2.PreType
RD.IRAltQuery.MF       = StreetName2,Table2.StreetName
RD.IRAltQuery.MF       = Type2,Table2.StreetType
RD.IRAltQuery.MF       = SufDir2,Table2.SufDir
RD.IRAltQuery.MF       = LeftZone2,Table1.LeftZone
RD.IRAltQuery.MF       = RightZone2,Table1.RightZone
RD.IRAltQuery.MF       = Shape,Table1.Shape
RD.IRAltQuery.MF       = ID,Table1.ID

RD.IRAltQuery.Where             = $IdxTable2.Sx = '@SDEX(%S2%)'
RD.IRAltQuery.InvariantWhere    = " AND $Table2.ID = $IdxTable2.XID AND $Table1.JOINID = $Table2.JOINID"
RD.IRAltQuery.ConditionalWhere  = ZN, " AND ($IdxTable1.ZoneL = '@ZNSX(%ZN%)' OR $IdxTable1.ZoneR = '@ZNSX(%ZN%)')"

RD.IRAltQuery.Filter = @SpellSens(%S2%, $Table2.StreetName)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Locator Index Structure Properties
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RD.LocatorIndex = Lox1
RD.LocatorIndex = Lox2

;RD.Query1.Lox = Lox1
;RD.IRQuery.Lox = Lox1
;RD.ILQuery.Lox = Lox1

;RD.Lox1.SortBy = $IdxTable1.ZoneL,$IdxTable1.ZoneR
;RD.Lox1.SortBy = $Table1.LeftZone,$Table1.RightZone
;RD.Lox1.SortBy = $IdxTable1.Sx
;RD.Lox1.SortBy = $Table1.StreetName
;RD.Lox1.SortBy = $Table1.PreType,$Table1.PreDir,$Table1.SufDir,$Table1.StreetType
;RD.Lox1.SubtreeSplit = 1

;RD.Lox1.Tail = $Table1.LeftFrom,$Table1.LeftTo,$Table1.RightFrom,$Table1.RightTo,$IdxTable1.LeftFrom,$IdxTable1.LeftTo,$IdxTable1.LeftXStreet,$IdxTable1.RightFrom,$IdxTable1.RightTo,$IdxTable1.RightXStreet,$Table1.ID,$Table1.Shape

;RdOra::RD.Lox1.Restrict = $Table1.StreetName <> 'UNNAMED STREET' AND $Table1.StreetName <> 'UNNAMED' AND $Table1.StreetName IS NOT NULL AND $Table1.StreetName <> ' '
;RdDef::RD.Lox1.Restrict = $Table1.StreetName <> 'UNNAMED STREET' AND $Table1.StreetName <> 'UNNAMED' AND $Table1.StreetName <> '' AND $Table1.StreetName <> ' '

RD.Query2.Lox = Lox2
RD.IRAltQuery.Lox = Lox2
RD.ILAltQuery.Lox = Lox2

RD.Lox2.SortBy = $IdxTable1.ZoneL,$IdxTable1.ZoneR
RD.Lox2.SortBy = $Table1.LeftZone,$Table1.RightZone
RD.Lox2.SortBy = $IdxTable2.Sx
RD.Lox2.SortBy = $Table2.StreetName
RD.Lox2.SortBy = $Table2.PreType,$Table2.PreDir,$Table2.SufDir,$Table2.StreetType
RD.Lox2.SubtreeSplit = 1

RD.Lox2.Tail = $Table1.LeftFrom,$Table1.LeftTo,$Table1.RightFrom,$Table1.RightTo,$IdxTable1.LeftFrom,$IdxTable1.LeftTo,$IdxTable1.LeftXStreet,$IdxTable1.RightFrom,$IdxTable1.RightTo,$IdxTable1.RightXStreet,$Table1.ID,$Table1.Shape

RdOra::RD.Lox2.Restrict = $Table2.StreetName <> 'UNNAMED STREET' AND $Table2.StreetName <> 'UNNAMED' AND $Table2.StreetName IS NOT NULL AND $Table2.StreetName <> ' '
RdDef::RD.Lox2.Restrict = $Table2.StreetName <> 'UNNAMED STREET' AND $Table2.StreetName <> 'UNNAMED' AND $Table2.StreetName <> '' AND $Table2.StreetName <> ' '
